class Solution {
public:
    // Function to check if the linked list has a loop.
    bool detectLoop(Node* head) {
        if (!head || !head->next) return false; // If the list is empty or has only one node, no loop.

        Node* slow = head; // Initialize slow pointer.
        Node* fast = head; // Initialize fast pointer.

        while (fast && fast->next) {
            slow = slow->next;         // Move slow pointer one step.
            fast = fast->next->next;   // Move fast pointer two steps.

            if (slow == fast) {        // If slow meets fast, there is a loop.
                return true;
            }
        }

        return false; // If we reach here, no loop was found.
    }
};
