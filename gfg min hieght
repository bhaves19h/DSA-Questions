class Solution {
  public:
    int getMinDiff(vector<int> &arr, int K) {
        // code here
     int n = arr.size();
    if (n == 1) return 0; // Only one tower, no difference.

    sort(arr.begin(), arr.end()); // Sort the array
    int result = arr[n - 1] - arr[0]; // Initial difference without modifications

    for (int i = 0; i < n - 1; i++) {
        int maxHeight = max(arr[i] + K, arr[n - 1] - K); // Max height after modification
        int minHeight = min(arr[0] + K, arr[i + 1] - K); // Min height after modification

        if (minHeight >= 0) { // Ensure no negative height
            result = min(result, maxHeight - minHeight);
        }
    }
return result;
    }
