class Solution {
public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        int n = tops.size();
        int candidate1 = tops[0], candidate2 = bottoms[0];
        int res1 = check(candidate1, tops, bottoms);
        int res2 = check(candidate2, tops, bottoms);
        
        if (res1 == -1 && res2 == -1) return -1;
        if (res1 == -1) return res2;
        if (res2 == -1) return res1;
        return min(res1, res2);
    }
    //function check
    int check(int target, vector<int>& tops, vector<int>& bottoms) {
        int rotateTop = 0, rotateBottom = 0;
        for (int i = 0; i < tops.size(); ++i) {
            if (tops[i] != target && bottoms[i] != target) return -1;
            if (tops[i] != target) rotateTop++;
            if (bottoms[i] != target) rotateBottom++;
        }
        return min(rotateTop, rotateBottom);
    }
};
