// Function to search for a target in a 2D matrix using binary search
bool searchMatrix(vector<vector<int>>& matrix, int target) {
    int m = matrix.size();        // Total number of rows
    int n = matrix[0].size();     // Total number of columns

    int start = 0;                // Start index of the virtual 1D array
    int end = m * n - 1;          // End index of the virtual 1D array

    // Perform binary search on the virtual 1D representation of the 2D matrix
    while (start <= end) {
        int mid = (start + end) / 2;   // Find the middle index

        // Convert 1D index to 2D coordinates (row, column)
        int row = mid / n;
        int col = mid % n;

        // Check if the target is found
        if (matrix[row][col] == target) {
            return true;               // Found the target
        } 
        // If target is greater, ignore the left half
        else if (matrix[row][col] < target) {
            start = mid + 1;
        } 
        // If target is smaller, ignore the right half
        else {
            end = mid - 1;
        }
    }

    return false;   // Target not found
}
