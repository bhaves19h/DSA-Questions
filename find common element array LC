class Solution {
public:
    vector<int> findIntersectionValues(vector<int>& nums1, vector<int>& nums2) {
    
        unordered_set<int> set1(nums1.begin(), nums1.end()); // Store nums1 elements in a set
        unordered_set<int> set2(nums2.begin(), nums2.end()); // Store nums2 elements in a set

        int answer1 = 0; // Count for nums1 indices existing in nums2
        int answer2 = 0; // Count for nums2 indices existing in nums1

        // Calculate answer1: nums1[i] exists in nums2
        for (int num : nums1) {
            if (set2.count(num)) {
                answer1++;
            }
        }

        // Calculate answer2: nums2[i] exists in nums1
        for (int num : nums2) {
            if (set1.count(num)) {
                answer2++;
            }
        }

        return {answer1, answer2}; // Return the result as a vector
    }
};
