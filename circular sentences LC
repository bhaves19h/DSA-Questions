class Solution {
public:
    bool isCircularSentence(string sentence) {
        int n = sentence.size();

        // Check if the first and last characters match
        if (sentence[0] != sentence[n - 1]) {
            return false;
        }

        // Iterate through the sentence to check transitions between words
        for (int i = 0; i < n; ++i) {
            if (sentence[i] == ' ') {
                // If the last character of the current word and the first character
                // of the next word don't match, return false
                if (sentence[i - 1] != sentence[i + 1]) {
                    return false;
                }
            }
        }

        return true;
    }
};
